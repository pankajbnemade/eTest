
<div class="row">
    <div class="col-sm-12">
        <table id="reportGrid" class="table table-bordered table-striped w-100">
            @*<thead>
                    <tr class="table-header">
                        <th>Voucher Type</th>
                        <th>Voucher No</th>
                        <th>Voucher Date</th>
                    </tr>
                </thead>*@
        </table>
    </div>
</div>


<script type="text/javascript">

    $(document).ready(function () {
        fnBindDataTable();
    });

    // search data.
    function fnBindDataTable() {

        var searchFilter = $("#SearchFilterModel").val();

        var jsonFilter = JSON.parse(searchFilter);

        var fileName = "Payable Statement";

        var reportTitle = "Payable Statement " + "(From - " + jsonFilter.FromDate + " To - " + jsonFilter.ToDate + ")" ;

        $("#reportGrid").DataTable({
            "destroy": true,
            "pageLength": 25,
            "paging": false,
            "searching": false,
            "ordering": false,
            "info": false,
            "scrollX": true,
            //"dom": "<'row'<'col-sm-12'tr>>" +
            //    "<'row'<'col-sm-4'i><'col-sm-4 text-center'l><'col-sm-4'p>>",
            //'lrtip',
            /*"serverSide": true,*/
            "dom":"Bfrtip",
            buttons: [
                {
                    extend: 'excelHtml5',
                    text: '<i class="fas fa-file-excel"></i> Excel',
                    titleAttr: 'Excel',
                    className: 'btn btn-default',
                    orientation: 'landscape',
                    pageSize: 'A4',
                    filename: fileName,
                    title: reportTitle
                },
                {
                    extend: 'pdfHtml5',
                    text: '<i class="fas fa-file-pdf"></i> PDF',
                    titleAttr: 'PDF',
                    className: 'btn btn-default',
                    orientation: 'landscape',
                    pageSize: 'A4',
                    filename: fileName,
                    title: reportTitle
                }
            ],
            "ajax": {
                "url": "@Url.Action("GetTransactionList", "PayableStatement")",
                "type": "POST",
                "datatype": "json",
                "data": {
                    searchFilter: searchFilter
                },
            },
            "columns": [
                { "data": "InvoiceType", "name": "InvoiceType", "title": "Invoice Type" },
                {
                    "data": "InvoiceNo", "name": "InvoiceNo", "title": "Invoice No", className: "dt-nowrap",
                    "render": function (data, type, full, meta) {
                        if (full.SequenceNo == 1 || full.SequenceNo == 3) {
                            return '<b>' + full.InvoiceNo + '</b>';
                        }
                        else {
                            return full.InvoiceNo;
                        }
                    }
                },
                {
                    "data": "InvoiceDate", "name": "InvoiceDate", "title": "Invoice Date",
                    "render": function (dt) {
                        if (Date.parse(dt)) {
                            return moment(dt).format("DD/MMM/YYYY");
                        }
                        else {
                            return "";
                        }
                    }
                },
                {
                    "data": "DueDate", "name": "DueDate", "title": "Due Date",
                    "render": function (dt) {
                        if (Date.parse(dt)) {
                            return moment(dt).format("DD/MMM/YYYY");
                        }
                        else {
                            return "";
                        }
                    }
                },
                { "data": "CurrencyCode", "name": "CurrencyCode", "title": "Currency" },
                {
                    "data": "ExchangeRate", "name": "ExchangeRate", "title": "Exchange Rate", className: "dt-right dt-nowrap",
                    "render": function (data, type, full, meta) {
                        if (full.SequenceNo == 1 || full.SequenceNo == 3 || full.SequenceNo == 4 || full.SequenceNo == 5) {
                            return '';
                        }
                        else {
                            return addCommas(full.ExchangeRate);
                        }
                    }
                },
                {
                    "data": "NetAmountFc", "name": "NetAmountFc", "title": "Net Amount FC", className: "dt-right dt-nowrap",
                    "render": function (data, type, full, meta) {
                        if (full.SequenceNo == 1 || full.SequenceNo == 3 || full.SequenceNo == 4 || full.SequenceNo == 5) {
                            return '';
                        }
                        else {
                            return addCommas(full.NetAmountFc);
                        }
                    }
                },
                {
                    "data": "NetAmount", "name": "NetAmount", "title": "Net Amount", className: "dt-right dt-nowrap",
                    "render": function (data, type, full, meta) {
                        if (full.SequenceNo == 1 || full.SequenceNo == 3) {
                            return '<b>' + addCommas(full.NetAmount) + '</b>';
                        }
                        else if (full.SequenceNo == 4 || full.SequenceNo == 5) {
                            return '';
                        }
                        else {
                            return addCommas(full.NetAmount);
                        }
                    }
                },
                {
                    "data": "PaidAmount", "name": "PaidAmount", "title": "Paid Amount", className: "dt-right dt-nowrap",
                    "render": function (data, type, full, meta) {
                        if (full.SequenceNo == 1 || full.SequenceNo == 3 || full.SequenceNo == 4) {
                            return '<b>' + addCommas(full.PaidAmount) + '</b>';
                        }
                        else if (full.SequenceNo == 5) {
                            return '';
                        }
                        else {
                            return addCommas(full.PaidAmount);
                        }
                    }
                },
                {
                    "data": "OutstandingAmount", "name": "OutstandingAmount", "title": "Outstanding Amount", className: "dt-right dt-nowrap",
                    "render": function (data, type, full, meta) {
                        if (full.SequenceNo == 1 || full.SequenceNo == 3) {
                            return '<b>' + addCommas(full.OutstandingAmount) + '</b>';
                        }
                        else if (full.SequenceNo == 4) {
                            return '';
                        }
                        else {
                            return addCommas(full.OutstandingAmount);
                        }
                    }
                },
                { "data": "OutstandingDays", "name": "OutstandingDays", "title": "Outstanding Days" },
            ],
        });


    }

</script>

