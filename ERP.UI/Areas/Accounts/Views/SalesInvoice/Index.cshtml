@model SearchFilterSalesInvoiceModel
@{ ViewBag.Title = "Sales Invoice List"; }

<section class="content-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <h5>@ViewBag.Title</h5>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-body p-2" id="searchFilterCriteria">
                        <div class="row">
                            <div class="col-6 col-sm-2">
                                <div class="form-group-sm">
                                    @Html.LabelFor(model => model.InvoiceNo, new { @class = "" })
                                    @Html.TextBoxFor(model => model.InvoiceNo, new { @class = "form-control form-control-sm" })
                                </div>
                            </div>
                            <div class="col-6 col-sm-2">
                                <div class="form-group-sm">
                                    @Html.LabelFor(model => model.CustomerLedgerId, new { @class = "" })
                                    @Html.DropDownListFor(model => model.CustomerLedgerId, new SelectList(ViewBag.CustomerList, "Value", "DisplayText"), "Select", new { @class = "form-control form-control-sm" })
                                </div>
                            </div>
                            <div class="col-6 col-sm-2">
                                <div class="form-group-sm">
                                    @Html.LabelFor(model => model.FromDate)
                                    @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control form-control-sm", autocomplete = "off", @placeholder = "DD/MMM/YYYY" })
                                </div>
                            </div>
                            <div class="col-6 col-sm-2">
                                <div class="form-group-sm">
                                    @Html.LabelFor(model => model.ToDate)
                                    @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control form-control-sm", autocomplete = "off", @placeholder = "DD/MMM/YYYY" })
                                </div>
                            </div>
                            <div class="col-6 col-sm-2">
                                <div class="form-group-sm">
                                    @Html.LabelFor(model => model.CustomerReferenceNo, new { @class = "" })
                                    @Html.TextBoxFor(model => model.CustomerReferenceNo, new { @class = "form-control form-control-sm" })
                                </div>
                            </div>
                            <div class="col-6 col-sm-2">
                                <div class="form-group-sm">
                                    @Html.LabelFor(model => model.AccountLedgerId, new { @class = "" })
                                    @Html.DropDownListFor(model => model.AccountLedgerId, new SelectList(ViewBag.AccountLedgerList, "Value", "DisplayText"), "Select", new { @class = "form-control form-control-sm" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 pt-2 text-right">
                                <button class="btn btn-primary" type="button" onclick="javascript: fnSearchInvoice();">
                                    <i class="fas fa-search"></i> Search
                                </button>
                                <button class="btn btn-secondary" type="button" onclick="javascript: fnResetSearch();">
                                    <i class="fas fa-undo"></i> Reset
                                </button>
                                <button class="btn btn-primary" type="button" onclick="javascript: fnAddInvoice();">
                                    <i class="fas fa-plus"></i> New
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                @*<div class="col-sm-12 table-responsive">*@
                <table id="salesInvoiceGrid" class="table table-bordered table-striped w-100">
                    <thead>
                        <tr class="table-header">
                            <th class="no-sort"></th>
                            <th>SalesInvoiceId</th>
                            <th>Invoice No</th>
                            <th>Invoice Date</th>
                            <th>Customer</th>
                            <th>Customer Ref No</th>
                            <th>Customer Ref Date</th>
                            <th>Currency</th>
                            <th>Net Amount FC</th>
                            <th>Status</th>
                            <th>Prepared By</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</section>

<div id="modal-invoice" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="true"></div>

<script type="text/javascript">
    const FROM_PATTERN = 'YYYY-MM-DD HH:mm:ss.SSS';
    const TO_PATTERN = 'DD/MM/YYYY HH:mm';
    $(document).ready(function () {
        $("#salesInvoiceGrid").DataTable({
            "processing": true,
            "scrollX": true,
            "dom": "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-4'i><'col-sm-4 text-center'l><'col-sm-4'p>>",
            //'lrtip',
            "serverSide": true,
            "ajax": {
                "url": "@Url.Action("GetSalesInvoiceList", "SalesInvoice")",
                "type": "POST",
                "datatype": "json",
                "data": {
                    searchFilter: function () {
                        var searchFilterModel = {
                            InvoiceNo: $('#InvoiceNo').val(),
                            CustomerLedgerId: $('#CustomerLedgerId').val(),
                            FromDate: $('#FromDate').val(),
                            ToDate: $('#ToDate').val(),
                            CustomerReferenceNo: $('#CustomerReferenceNo').val(),
                            AccountLedgerId: $('#AccountLedgerId').val(),
                        };

                        return JSON.stringify(searchFilterModel);
                    }
                },
            },
            "columns": [
                {
                    "orderable": false,
                    "render": function (data, type, full, meta) {
                        return '<div class="action_button">' +
                            '<button type="button" class="border-0 rounded-0 text-success" title="Edit" onclick="javascript: fnEditInvoiceMaster(' + full.SalesInvoiceId + ')"><i class="far fa-edit"></i></button>' +
                           /* '<button type="button" class="border-0 rounded-0 text-danger" title="Delete" data-toggle="modal" onclick="javascript: fnDeleteInvoiceMaster(this, ' + full.SalesInvoiceId + ')"><i class="fa fa-trash-alt"></i></button>' +*/
                            '</div>';
                    }
                },
                { "data": "SalesInvoiceId", "name": "SalesInvoiceId", "visible": false },
                { "data": "InvoiceNo", "name": "InvoiceNo" },
                {
                    "data": "InvoiceDate", "name": "InvoiceDate",
                    "render": function (dt) {
                        return moment(dt).format("DD/MMM/YYYY");
                    }
                },
                { "data": "CustomerLedgerName", "name": "CustomerLedgerName" },
                { "data": "CustomerReferenceNo", "name": "CustomerReferenceNo" },
                {
                    "data": "CustomerReferenceDate", "name": "CustomerReferenceDate",
                    "render": function (dt) {
                        return moment(dt).format("DD/MMM/YYYY");
                    }
                },
                { "data": "CurrencyCode", "name": "CurrencyCode" },
                { "data": "NetAmountFc", "name": "NetAmountFc", render: $.fn.dataTable.render.number(',', '.', 2, '') },
                { "data": "StatusName", "name": "StatusName" },
                { "data": "PreparedByName", "name": "PreparedByName" }
            ],
        });

        $('#FromDate').datetimepicker({
            format: 'DD/MMM/YYYY',
            useCurrent: false,
            defaultDate: false, // setValue:''
            widgetPositioning: {
                horizontal: 'left',
                vertical: 'bottom'
            }
        });

        $('#ToDate').datetimepicker({
            format: 'DD/MMM/YYYY',
            useCurrent: false,
            defaultDate: false, // setValue:''
            widgetPositioning: {
                horizontal: 'left',
                vertical: 'bottom'
            }
        });
    });

    // edit invoice.
    function fnEditInvoiceMaster(salesInvoiceId) {
        window.location.href = '@Url.Action("ManageInvoice", "SalesInvoice")?salesInvoiceId=' + salesInvoiceId;
    }

    // delete invoice.
    function fnDeleteInvoiceMaster(salesInvoiceId) {

    }

    // search data.
    function fnSearchInvoice() {
        $("#salesInvoiceGrid").DataTable().ajax.reload();
    }

    // reset filter.
    function fnResetSearch() {
        $('#searchFilterCriteria :input[type=text]').each(function (index) {
            $(this).val('');
        });
        $('#searchFilterCriteria select').each(function (index) {
            $(this).val('');
        });

        $("#salesInvoiceGrid").DataTable().ajax.reload();
    }

    // new button click.
    function fnAddInvoice() {
        AjaxCommunication.CreateRequest(this.window, 'Get', '@Url.Action("AddInvoiceMaster", "SalesInvoice")', 'html', '',
        function (data) {
            $('#modal-invoice').empty();
            $('#modal-invoice').html(data).modal('show');
            return false;
        }, 
        function (XMLHttpRequest, textStatus, errorThrown) {
            errorCallback(XMLHttpRequest, textStatus, errorThrown);
        }, true, null, false);
    }
</script>
@{ await Html.RenderPartialAsync("_ConfirmDeleteInvoiceMaster"); }