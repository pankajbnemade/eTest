
<div class="row">
    <div class="col-sm-12">
        <input id="addRow_Blank" type="hidden" value="0">

        <table id="paymentVoucherDetailGrid" class="table table-bordered table-striped w-100">
            <thead>
                <tr class="table-header">
                    <th class="no-sort">
                        <button class="btn btn-primary mr-1 pr-1 pl-1 pb-0 pt-0" type="button" id="add-new-voucher-dtl" title="Add New Line">
                            <i class="fas fa-plus"></i>
                        </button> 
                    </th>
                    <th>PaymentVoucherDetId</th>
                    <th>Particular</th>
                    <th>Transaction Type</th>
                    <th>Amount Fc</th>
                    <th>Invoice Type</th>
                    <th>Invoice No</th>
                    <th>Narration</th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 p-2">
        <button class="btn btn-primary" type="button" id="save-voucher-dtl" title="Save Detail">
            Save Detail
        </button>
    </div>
</div>

<style>
    table.dataTable tbody td {
        padding: 0px;
    }

    
</style>

<script type="text/javascript">

    $(document).ready(function () {

        //$('.decimal-two-scale').autoNumeric('init', { vMin: '-999999999999999.99', vMax: '999999999999999.99' });

        dataTableLoad();

        $("#paymentVoucherDetailGrid tbody").on('change', '#TransactionTypeId', function (e) {

            var currentRow = $(this).closest("tr");

            if (currentRow.find("#ParticularLedgerId").val() == "") {
                currentRow.find("#TransactionTypeId").val("");
                alert("Please select Particular");
                currentRow.find("#ParticularLedgerId").focus();
                return false;
            }

            if (currentRow.find("#TransactionTypeId").val() == 2) {
                var paymentVoucherId = '@ViewBag.PaymentVoucherId';

                var model = {
                    paymentVoucherId: paymentVoucherId,
                    particularLedgerId: currentRow.find("#ParticularLedgerId").val()
                };

                AjaxCommunication.CreateRequest(this.window, 'Post', '@Url.Action("MapOutstandingDetail", "PaymentVoucherDetail")', 'html', model,
                    function (data) {
                        $('#modal-voucher').empty();
                        $('#modal-voucher').html(data).modal('show');
                        return false;
                    }, 
                    function (XMLHttpRequest, textStatus, errorThrown) {
                        errorCallback(XMLHttpRequest, textStatus, errorThrown);
                    }, 
                    true, null, false);
            }

        });

        //account ledger change.
        $('#add-new-voucher-dtl').click(function () {
            $("#addRow_Blank").val(1);
            dataTableLoad();
        });

         //account voucher dtl.
        $('#save-voucher-dtl').click(function (e) {

            $("#addRow_Blank").val(0);

            var paymentVoucherId = '@ViewBag.PaymentVoucherId';
            var isValid = true;

             $('#paymentVoucherDetailGrid tbody tr').each(function () {

                if (parseInt($('#PaymentVoucherDetId', this).val()) != 0) {

                    if ($('#ParticularLedgerId', this).val() == "") {
                        alert("Please select particular");
                        $('#ParticularLedgerId', this).focus();
                        isValid = false;
                        return false;
                    }
                    else if ($('#TransactionTypeId', this).val() == "") {
                        alert("Please select transaction type");
                        $('#TransactionTypeId', this).focus();
                        isValid = false;
                        return false;
                    }
                    else if(isNaN($('#AmountFc', this).val()) || $('#AmountFc', this).val() == "") {
                        $('#AmountFc', this).val("");
                        alert("Please eneter amount");
                        $('#AmountFc', this).focus();
                        isValid = false;
                        return false;
                    }
                }

            }); //validation loop

            if (isValid == false) {
                return false;
            }

            $('#paymentVoucherDetailGrid tbody tr').each(function () {

                var model = {
                    paymentVoucherDetId: $('#PaymentVoucherDetId', this).val(),
                    paymentVoucherId: paymentVoucherId,
                    particularLedgerId: $('#ParticularLedgerId', this).val(),
                    transactionTypeId: $('#TransactionTypeId', this).val(),
                    amountFc: $('#AmountFc', this).val(),
                    narration: $('#Narration', this).val()
                };

                AjaxCommunication.CreateRequest(this.window, 'Post', '@Url.Action("SaveVoucherDetailInline", "PaymentVoucherDetail")', '', model,
                function (response) {
                    if (true == response.Result.Status) {
                        //console.log(model);
                    }
                    else {
                        //console.log(model);
                    }
                }, 
                function (XMLHttpRequest, textStatus, errorThrown) {
                    errorCallback(XMLHttpRequest, textStatus, errorThrown);
                }, 
                true, null, false);

            });

            fnSuccessNotify('Record saved.');

            var tabUrl = '@Url.Action("VoucherDetail", "PaymentVoucherDetail")?paymentVoucherId=' + paymentVoucherId;

            $('#voucherdetail').empty();
            $('#voucherdetail').load(tabUrl);
        });


    });


    function dataTableLoad() {
        var particularLedgerList = '@Html.Raw(ViewBag.ParticularLedgerList)';
        var transactionTypeList = '@Html.Raw(ViewBag.TransactionTypeList)';

        particularLedgerList = JSON.parse(particularLedgerList);
        transactionTypeList = JSON.parse(transactionTypeList);

        $("#paymentVoucherDetailGrid").DataTable({
            "destroy": true,
            "pageLength": 25,
            "paging":false,
            "ordering": false,
            "searching": false,
            "info":false,
            "dom": "<'row'<'col-sm-6'l><'col-sm-6'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-4'i><'col-sm-4 text-center'><'col-sm-4'p>>",
            "bPaginate": true,
            //"scrollX": true,
            "ajax": {
                "url": "@Url.Action("GetPaymentVoucherDetailList", "PaymentVoucherDetail")",
                "type": "POST",
                "cache": "false",
                "datatype": "json",
                "data": { paymentVoucherId: '@ViewBag.PaymentVoucherId', addRow_Blank: $("#addRow_Blank").val() },
            },
            "columns": [
                {
                    "render": function (data, type, full, meta) {
                        var control = '<div class="action_button text-sm-center">'
                        control = control + '<input id="PaymentVoucherDetId" type="hidden" value="' + full.PaymentVoucherDetId + '">'

                        if (full.PaymentVoucherDetId != 0) {
                            control = control + '<button type="button" class="border-0 rounded-0 text-danger" data-toggle="modal"  title="Delete" onclick="javascript: fnDeleteVoucherDetail(this, ' + full.PaymentVoucherDetId + ')"><span class="fa fa-trash-alt"></span></button>'
                        }
                        control = control + '</div>';

                        return control;
                    }
                },
                { "data": "PaymentVoucherDetId", "title": "PaymentVoucherDetId", "visible": false, "searchable": true },
                {
                    "data": "ParticularLedgerId", "title": "Particular",
                    "render": function (data, type, full, meta) {
                        var ddl = '<select size="1" id="ParticularLedgerId" name="ParticularLedgerId" class="form-control form-control-sm"';

                        if (full.TransactionTypeId == 2) {
                            ddl = ddl + ' disabled="disabled"';
                        }

                        ddl = ddl + '>';

                        ddl = ddl + '<option value="' + "" + '">' + "Select" + '</option>';

                        for (var i = 0; i < particularLedgerList.length; i++) {

                            ddl = ddl + '<option value="' + particularLedgerList[i].Value + '"'

                            if (data == particularLedgerList[i].Value) {
                                ddl = ddl + ' selected="selected"';
                            }

                            ddl = ddl + '>' + particularLedgerList[i].DisplayText + '</option>';
                        }

                        ddl += '</select>';

                        return ddl;
                    }
                },
                {
                    "data": "TransactionTypeId", "title": "Trans Type",
                    "width": "110px",
                    "render": function (data, type, full, meta) {
                        var ddl = '<select size="1" id="TransactionTypeId" name="TransactionTypeId" class="form-control form-control-sm"';

                        if (full.PaymentVoucherDetId != 0) {
                            ddl = ddl + ' disabled="disabled"';
                        }

                        ddl = ddl + '>';

                        ddl = ddl + '<option value="' + "" + '">' + "Select" + '</option>';

                        for (var i = 0; i < transactionTypeList.length ; i++) {
                            ddl = ddl + '<option value="' + transactionTypeList[i].Value + '"'

                            if (data == transactionTypeList[i].Value) {
                                ddl = ddl + ' selected="selected"';
                            }

                            ddl = ddl + '>' + transactionTypeList[i].Description + '</option>';
                        }
                        ddl += '</select>';

                        return ddl;
                    }
                },
                {
                    "data": "AmountFc", "title": "Amount FC",  "width": "100px",

                    "render": function (data, type, full, meta) {
                        var input = '<input class="form-control form-control-sm"  id="AmountFc" name="AmountFc" type="text"  value="' + full.AmountFc + '"';

                        if (full.TransactionTypeId == 2) {
                            input = input + ' readonly="readonly"';
                        }

                        input = input + ' onkeypress="return fnNumberOnly(event.keyCode, 1, 0);"  >';

                        return input;
                    }
                },
                { "data": "InvoiceType", "title": "Invoice Type"},
                { "data": "InvoiceNo", "title": "Invoice No" },
                {
                    "data": "Narration", "title": "Narration",
                    "render": function (data, type, full, meta) {
                        //console.log(data);
                        return '<input class="form-control form-control-sm" id="Narration" name="Narration" type="text"  value="' + data + '">';
                    }
                }
            ],
        });

    }

</script>

@{ await Html.RenderPartialAsync("_ConfirmDeleteVoucherDetail"); }