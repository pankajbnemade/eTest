@model SalesInvoiceDetailModel

<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header">
            @if (Model.SalesInvoiceDetId > 0)
            {
<h4 class="modal-title">Edit Invoice Detail</h4> }
else
{
<h4 class="modal-title">Add Invoice Detail</h4>}
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <form id="frmInvoiceDetail" class="width100" method="post"
              asp-action="SaveInvoiceDetail" asp-controller="SalesInvoiceDetail" asp-area="Accounts"
              data-ajax-begin="return BeginInvoiceDetail();" data-ajax-success="SuccessInvoiceDetail"
              data-ajax="true" data-ajax-method="post">
            <div class="modal-body">
                @Html.HiddenFor(model => model.SalesInvoiceDetId)
                @Html.HiddenFor(model => model.SalesInvoiceId)
                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SrNo, new { @class = "required" })
                                @Html.TextBoxFor(model => model.SrNo, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(model => model.SrNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, new { @class = "required" })
                                @Html.TextBoxFor(model => model.Description, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, new { @class = "required" })
                                @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.UnitOfMeasurementId, new { @class = "required" })
                                @Html.DropDownListFor(model => model.UnitOfMeasurementId, new SelectList(ViewBag.UnitOfMeasurementList, "Value", "DisplayText"), "Select", new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(model => model.UnitOfMeasurementId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PerUnit, new { @class = "required" })
                                @Html.TextBoxFor(model => model.PerUnit, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(model => model.PerUnit, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.UnitPrice, new { @class = "required" })
                                @Html.TextBoxFor(model => model.UnitPrice, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.GrossAmountFc)
                                @Html.TextBoxFor(model => model.GrossAmountFc, new { @class = "form-control form-control-sm", @readonly = "@readonly" })
                                @Html.ValidationMessageFor(model => model.GrossAmountFc, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TaxAmountFc)
                                @Html.TextBoxFor(model => model.TaxAmountFc, new { @class = "form-control form-control-sm", @readonly = "@readonly" })
                                @Html.ValidationMessageFor(model => model.TaxAmountFc, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.NetAmountFc)
                                @Html.TextBoxFor(model => model.NetAmountFc, new { @class = "form-control form-control-sm", @readonly = "@readonly" })
                                @Html.ValidationMessageFor(model => model.NetAmountFc, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*<div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NetAmount)
                                    @Html.TextBoxFor(model => model.NetAmount, new { @class = "form-control form-control-sm", @readonly = "@readonly" })
                                    @Html.ValidationMessageFor(model => model.NetAmount)
                                </div>
                            </div>*@
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal" title="Back"><i class="fas fa-arrow-left"></i> Back</button>
                <button type="submit" class="btn btn-primary" title="Save"><i class="fas fa-save"></i> Save</button>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        //$('.decimal-two-scale').autoNumeric('init', { vMin: '-999999999999999.99', vMax: '999999999999999.99' });
    });

    // begin form
    function BeginInvoiceDetail() {
        var form = $("#frmInvoiceDetail");
        $(form).removeData("validator").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse($(form));
        var validator = $(form).validate();
        var isModelValid = $(form).valid();
        if (false == isModelValid) {
            validator.focusInvalid();
            return false;
        }
    }
    // success form
    function SuccessInvoiceDetail(data) {
        if (data.Result.Status) {
            $('#modal-invoice').modal('hide');
            fnSuccessNotify('Record saved sucessfully.');
            $("#salesInvoiceDetailGrid").DataTable().clear().ajax.reload();
        }
        else {
            fnDangerNotify('Error occured while processing request.');
            return false;
        }
    }
</script>
