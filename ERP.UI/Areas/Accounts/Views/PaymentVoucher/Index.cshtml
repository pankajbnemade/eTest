@model SearchFilterPaymentVoucherModel
@{ ViewBag.Title = "Payment Voucher List"; }

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-9">
                <h1>Payment Voucher List</h1>
            </div>
            <div class="col-3"></div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-body" id="searchFilterCriteria">
                        <div class="row">
                            <div class="col-6 col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.VoucherNo, new { @class = "" })
                                    @Html.TextBoxFor(model => model.VoucherNo, new { @class = "form-control form-control-sm" })
                                    @Html.ValidationMessageFor(model => model.VoucherNo)
                                </div>
                            </div>
                            <div class="col-6 col-sm-3">
                                <div class="form-group">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LedgerId, new { @class = "" })
                                        @Html.DropDownListFor(model => model.LedgerId, new SelectList(ViewBag.LedgerList, "Value", "DisplayText"), "Select", new { @class = "form-control form-control-sm" })
                                        @Html.ValidationMessageFor(model => model.LedgerId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-6 col-sm-3">
                                <div class="form-group">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FromDate)
                                        @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control form-control-sm", @placeholder = "DD/MMM/YYYY" })
                                        @Html.ValidationMessageFor(model => model.FromDate)
                                    </div>
                                </div>
                            </div>
                            <div class="col-6 col-sm-3">
                                <div class="form-group">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ToDate)
                                        @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control form-control-sm", @placeholder = "DD/MMM/YYYY" })
                                        @Html.ValidationMessageFor(model => model.ToDate)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 text-right">
                                <button class="btn btn-primary" type="button" onclick="javascript: fnSearchVoucher();">
                                    <i class="fas fa-search"></i> Search
                                </button>
                                <button class="btn btn-secondary" type="button" onclick="javascript: fnResetSearch();">
                                    <i class="fas fa-undo"></i> Reset
                                </button>
                                <button class="btn btn-primary" type="button" onclick="javascript: fnAddPaymentVoucher();">
                                    <i class="fas fa-plus"></i> New
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <table id="paymentVoucherGrid" class="table table-bordered table-striped w-100">
                    <thead>
                        <tr class="table-header">
                            <th class="no-sort">Action</th>
                            <th>PaymentVoucherId</th>
                            <th>Voucher No</th>
                            <th>Voucher Date</th>
                            <th>Amount FC</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</section>
<div id="modal-voucher" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="true"></div>

<script type="text/javascript">
    const FROM_PATTERN = 'YYYY-MM-DD HH:mm:ss.SSS';
    const TO_PATTERN = 'DD/MM/YYYY HH:mm';
    $(document).ready(function () {
        $("#paymentVoucherGrid").DataTable({
            "processing": true,
            "dom": "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-4'i><'col-sm-4 text-center'l><'col-sm-4'p>>",//'lrtip',
            "serverSide": true,
            "ajax": {
                "url": "@Url.Action("GetPaymentVoucherList", "PaymentVoucher")",
                "type": "POST",
                "datatype": "json",
                "data": {
                    searchFilter: function () {
                        var searchFilterModel = {
                            VoucherNo: $('#VoucherNo').val(),
                            LedgerId: $('#LedgerId').val(),
                            FromDate: $('#FromDate').val(),
                            ToDate: $('#ToDate').val(),
                        };

                        return JSON.stringify(searchFilterModel);
                    }
                },
            },
            "columns": [
                {
                    "orderable": false ,
                    "width": "8%",
                    "render": function (data, type, full, meta) {
                        return '<div class="action_button">' +
                            '<button type="button" class="border-0 rounded-0 text-success" onclick="javascript: fnEditVoucherMaster(' + full.PaymentVoucherId + ')"><span class="fa fa-pencil-alt"></span></button>' +
                            '<button type="button" class="border-0 rounded-0 text-danger" data-toggle="modal" onclick="javascript: fnDeleteVoucherMaster(this, ' + full.PaymentVoucherId + ')"><span class="fa fa-trash-alt"></span></button>' +
                            '</div>';
                    }
                },
                { "data": "PaymentVoucherId", "name": "PaymentVoucherId", "visible": false },
                { "data": "VoucherNo", "name": "VoucherNo" },
                {
                    "data": "VoucherDate", "name": "VoucherDate",
                    "render": function (dt) {
                        return moment(dt).format("DD/MMM/YYYY");
                    }
                },
                { "data": "AmountFc", "name": "AmountFc", render: $.fn.dataTable.render.number(',', '.', 2, '') }
            ],
        });

        $('#FromDate').datetimepicker({
            format: 'DD/MMM/YYYY',
            useCurrent: false,
            defaultDate: false, // setValue:''
            widgetPositioning: {
                horizontal: 'left',
                vertical: 'bottom'
            }

        });

        $('#ToDate').datetimepicker({
            format: 'DD/MMM/YYYY',
            useCurrent: false,
            defaultDate: false, // setValue:''
            widgetPositioning: {
                horizontal: 'left',
                vertical: 'bottom'
            }
        });
    });

    // edit voucher.
    function fnEditVoucherMaster(paymentVoucherId) {
        window.location.href = '@Url.Action("ManageVoucher", "PaymentVoucher")?paymentVoucherId=' + paymentVoucherId;
    }

    // delete voucher.
    function fnDeleteVoucherMaster(paymentVoucherId) {

    }

    // search data.
    function fnSearchVoucher() {
        $("#paymentVoucherGrid").DataTable().ajax.reload();
    }

    // reset filter.
    function fnResetSearch() {
        $('#searchFilterCriteria :input[type=text]').each(function (index) {
            $(this).val('');
        });
        $('#searchFilterCriteria select').each(function (index) {
            $(this).val('');
        });

        $("#paymentVoucherGrid").DataTable().ajax.reload();
    }

    // new button click.
    function fnAddPaymentVoucher() {
        AjaxCommunication.CreateRequest(this.window, 'Get', '@Url.Action("AddVoucherMaster", "PaymentVoucher")', 'html', '',
        function (data) {
            $('#modal-voucher').empty();
            $('#modal-voucher').html(data).modal('show');
            return false;
        }, null, true, null, false);
    }
</script>
@{ await Html.RenderPartialAsync("_ConfirmDeleteVoucherMaster"); }