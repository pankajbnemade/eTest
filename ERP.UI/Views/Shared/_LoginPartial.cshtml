@*@using Microsoft.AspNetCore.Identity
    @inject SignInManager<IdentityUser> SignInManager
    @inject UserManager<IdentityUser> UserManager

    <ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a  class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@await Component.InvokeAsync("UserName") </a>
        </li>
        <li class="nav-item">
            <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button  type="submit" class="nav-link btn btn-link ">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link " asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
    </ul>*@

@*<ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link " asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    </ul>*@

@*@using Microsoft.AspNetCore.Identity
    @inject SignInManager<IdentityUser> SignInManager
    @inject UserManager<IdentityUser> UserManager

    @if (User.Identity.IsAuthenticated)
    {
    <ul class="navbar-nav flex-grow-1">
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Admin" asp-controller="Account" asp-action="UserInformation">@User.Identity.Name</a>

        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Admin" asp-controller="Account" asp-action="Logout">Logout</a>
        </li>
    </ul> }
    else
    {
    <ul class="navbar-nav flex-grow-1">
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Admin" asp-controller="Account" asp-action="Login">Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Admin" asp-controller="Account" asp-action="Register">Register</a>
        </li>
    </ul>}*@

@using Microsoft.AspNetCore.Identity
@using ERP.DataAccess.Entity

@inject SignInManager<ApplicationIdentityUser> SignInManager
@inject UserManager<ApplicationIdentityUser> UserManager

<ul class="navbar-nav">
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle text-white" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="fas fa-user-circle"></i>
        </a>

        @if (User.Identity.IsAuthenticated)
        {
<div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">
    <a class="dropdown-item" asp-area="Admin" asp-controller="User" asp-action="UserInformation"><i class="fas fa-user"></i> @User.Identity.Name</a>
    <a class="dropdown-item" asp-area="Common" asp-controller="Home" asp-action="ChangeCompany"><i class="fas fa-building"></i> Company</a>
    <a class="dropdown-item" asp-area="Common" asp-controller="Home" asp-action="ChangeYear"><i class="fas fa-calendar-alt"></i> Year</a>

    <a class="dropdown-item" asp-area="Admin" asp-controller="User" asp-action="Logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
</div> }
else
{
<div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">
    <a class="dropdown-item" asp-area="Admin" asp-controller="User" asp-action="Login"><i class="fas fa-sign-in-alt"></i> Login</a>
    <a class="dropdown-item" asp-area="Admin" asp-controller="User" asp-action="Register"><i class="fas fa-user-plus"></i> Register</a>
</div>}



    </li>
</ul>